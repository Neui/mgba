#set(CMAKE_SYSTEM_NAME TINspire CACHE INTERNAL "System Name")
set(CMAKE_SYSTEM_NAME Generic CACHE INTERNAL "System Name")
set(CMAKE_SYSTEM_VERSION 4.4 CACHE INTERNAL "System Version")
set(CMAKE_SYSTEM_PROCESSOR arm CACHE INTERNAL "Processor")
set(CMAKE_LIBRARY_ARCHITECTURE arm-none-eabi CACHE INTERNAL "ABI")
set(TINSPIRE ON)
add_definitions(-DTINSPIRE -DNDLESS)

if(CMAKE_HOST_WIN32)
	set(extension ".exe")
endif()

find_program(NSPIRE_TOOLS nspire-tools)
if(NSPIRE_TOOLS)
	execute_process(COMMAND "${NSPIRE_TOOLS}" path
			OUTPUT_VARIABLE NDLESS_SDK)
	string(REPLACE "\n" "" NDLESS_SDK "${NDLESS_SDK}")
endif()
if(NOT NDLESS_SDK AND DEFINED ENV{NDLESS_SDK})
	set(NDLESS_SDK "$ENV{NDLESS_SDK}")
endif()
set(NDLESS_SDK "${NDLESS_SDK}" CACHE PATH "ndless-sdk folder")
set(ENV{NDLESS_SDK} "${NDLESS_SDK}") # Hack to make CMake remember this var
if(NOT NDLESS_SDK)
	message(FATAL_ERROR "Please set NDLESS_SDK to a valid ndless-sdk folder")
endif()

set(ENV{PATH} "$NDLESS_SDK:$NDLESS_SDK/toolchain/install:$ENV{PATH}")

#set(CMAKE_SYSROOT_PATH "${NDLESS_SDK}/toolchain/install")
set(CMAKE_FIND_ROOT_PATH "${NDLESS_SDK}"
		"${NDLESS_SDK}/toolchain/install"
		"${NDLESS_SDK}/toolchain/install/${CMAKE_LIBRARY_ARCHITECTURE}"
		)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY CACHE INTERNAL "")
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY CACHE INTERNAL "")
set(PKG_CONFIG_EXECUTABLE "/dev/null" CACHE INTERNAL "" FORCE)

set(cross_prefix ${CMAKE_LIBRARY_ARCHITECTURE}-)
find_program(CMAKE_AR ${cross_prefix}gcc-ar${extension})
find_program(CMAKE_RANLIB ${cross_prefix}gcc-ranlib${extension})
set(cross_prefix nspire-)
find_program(CMAKE_C_COMPILER ${cross_prefix}gcc${extension})
find_program(CMAKE_CXX_COMPILER ${cross_prefix}g++${extension})
find_program(CMAKE_ASM_COMPILER ${cross_prefix}gcc${extension})
find_program(CMAKE_LINKER ${cross_prefix}ld${extension})
# Used by CMake for link-time-optimization
set(CMAKE_C_COMPILER_AR "${CMAKE_AR}")
set(CMAKE_C_COMPILER_RANLIB "${CMAKE_RANLIB}")
set(CMAKE_CXX_COMPILER_AR "${CMAKE_AR}")
set(CMAKE_CXX_COMPILER_RANLIB "${CMAKE_RANLIB}")
find_program(GENZEHN genzehn${extension}) # To create .tns files

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH CACHE INTERNAL "")
